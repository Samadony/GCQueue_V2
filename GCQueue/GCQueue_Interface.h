/*
 * GCQueue_Interface.h
 *
 *  Created on: Nov 21, 2021
 *      Author: woraelsa
 */

#ifndef INC_GCQUEUE_INTERFACE_H_
#define INC_GCQUEUE_INTERFACE_H_

#include "GCQueue_Core.h"

/*
 * Error and status of queue
 */
typedef enum{
	GCQ_EMPTY = 0,
	GCQ_FULL = 1,
	GCQ_OK = 2,
	GCQ_DATA_BUFFER_NULL = 3,
	GCQ_ENQUEUE_DATA_ADDRESS_NULL = 4,
	GCQ_DEQUEUE_DATA_ADDRESS_NULL = 5,
	GCQ_PEEK_DATA_ADDRESS_NULL = 6,
	GCQ_ERROR_NUM
}GCQ_Status_t;

/*
 * Queue Allocator
 */
#define CREATE_GCQUEUE(TYPE, NAME, BUFFER_SIZE_IN_TYPE_SIZE)					\
		DEFINE_GCQUEUE(TYPE)													\
		INSTANTIATE_GCQUEUE(TYPE, NAME, BUFFER_SIZE_IN_TYPE_SIZE)				\
/*
 * APIs
 */
#define GCQ_HARD_ERASE_API(TYPE, OBJECT_ADD) 			GCQ_HARD_ERASE_ABSTRACTOR(TYPE, OBJECT_ADD)
#define GCQ_SOFT_ERASE_API(TYPE, OBJECT_ADD) 			GCQ_SOFT_ERASE_ABSTRACTOR(TYPE, OBJECT_ADD)
#define GCQ_IS_FULL_API(TYPE, OBJECT_ADD)				GCQ_IS_FULL_ABSTRACTOR(TYPE, OBJECT_ADD)
#define GCQ_IS_EMPTY_API(TYPE, OBJECT_ADD)				GCQ_IS_EMPTY_ABSTRACTOR(TYPE, OBJECT_ADD)
#define GCQ_ENQUEUE_API(TYPE, OBJECT_ADD, DATA_ADD)  	GCQ_ENQUEUE_ABSTRACTOR(TYPE, OBJECT_ADD, DATA_ADD)
#define GCQ_DEQUEUE_API(TYPE, OBJECT_ADD, DATA_ADD)  	GCQ_DEQUEUE_ABSTRACTOR(TYPE, OBJECT_ADD, DATA_ADD)
#define GCQ_PEEK_API(TYPE, OBJECT_ADD, DATA_ADD)  		GCQ_PEEK_ABSTRACTOR(TYPE, OBJECT_ADD, DATA_ADD)
#endif /* INC_GCQUEUE_INTERFACE_H_ */
